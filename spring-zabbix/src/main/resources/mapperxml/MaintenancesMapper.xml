<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.mapper.MaintenancesMapper">
  <resultMap id="BaseResultMap" type="com.xq.domain.Maintenances">
    <!--@mbg.generated-->
    <id column="maintenanceid" jdbcType="BIGINT" property="maintenanceid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="maintenance_type" jdbcType="INTEGER" property="maintenanceType" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="active_since" jdbcType="INTEGER" property="activeSince" />
    <result column="active_till" jdbcType="INTEGER" property="activeTill" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    maintenanceid, `name`, maintenance_type, description, active_since, active_till
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from maintenances
    where maintenanceid = #{maintenanceid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from maintenances
    where maintenanceid = #{maintenanceid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.domain.Maintenances">
    <!--@mbg.generated-->
    insert into maintenances (maintenanceid, `name`, maintenance_type, 
      description, active_since, active_till
      )
    values (#{maintenanceid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{maintenanceType,jdbcType=INTEGER}, 
      #{description,jdbcType=LONGVARCHAR}, #{activeSince,jdbcType=INTEGER}, #{activeTill,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xq.domain.Maintenances">
    <!--@mbg.generated-->
    insert into maintenances
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="maintenanceid != null">
        maintenanceid,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="maintenanceType != null">
        maintenance_type,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="activeSince != null">
        active_since,
      </if>
      <if test="activeTill != null">
        active_till,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="maintenanceid != null">
        #{maintenanceid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="maintenanceType != null">
        #{maintenanceType,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="activeSince != null">
        #{activeSince,jdbcType=INTEGER},
      </if>
      <if test="activeTill != null">
        #{activeTill,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.domain.Maintenances">
    <!--@mbg.generated-->
    update maintenances
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="maintenanceType != null">
        maintenance_type = #{maintenanceType,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="activeSince != null">
        active_since = #{activeSince,jdbcType=INTEGER},
      </if>
      <if test="activeTill != null">
        active_till = #{activeTill,jdbcType=INTEGER},
      </if>
    </set>
    where maintenanceid = #{maintenanceid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.domain.Maintenances">
    <!--@mbg.generated-->
    update maintenances
    set `name` = #{name,jdbcType=VARCHAR},
      maintenance_type = #{maintenanceType,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR},
      active_since = #{activeSince,jdbcType=INTEGER},
      active_till = #{activeTill,jdbcType=INTEGER}
    where maintenanceid = #{maintenanceid,jdbcType=BIGINT}
  </update>
</mapper>